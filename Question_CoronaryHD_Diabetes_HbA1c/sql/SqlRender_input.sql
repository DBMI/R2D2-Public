/*********************************************************************************************************

Modifications made by Kai Post k1post@health.ucsd.edu 09/09/2020 for compatibility with SQLRender:
                        
Example of getting this query ready to run using RStudio and SQLRender:

library(SqlRender)
query12SqlTemplate <- render(SqlRender::readSql("~/git/R2D2-Queries/Question_0012/sql/SqlRender_input.sql"))

**********************************************************************************************************

Project: R2D2
Question number: Question_0012
Question in Text: Among adults hospitalized with COVID-19, what is the mortality rate stratified by: 
	(a) history of diabetes 
	(b) history of heart disease 
	(c) hemoglobin A1c level (<=7% and >7%)

Database: SQL Server
Author name: Paulina Paul 
Author GitHub username: papaul
Author email: paulina@health.ucsd.edu
Version : 3.1
Invested work hours at initial git commit: 30
Initial git commit date: 06/16/2020
Last modified date: 08/17/2020


Instructions: 
-------------

Initialize variables: 
	i) Please change the site number of your site
	ii) Please edit to include all concept_ids of units (%, mmol/mol) used at each site locally
	ii) Please change threshold for minimum counts to be displayed in the results. Possible values are 0 or 11.
	Default value is 0 (ie no cell suppression). When value is 11, result cell will display [1-10].


Section 1: Create a base cohort

Section 2: Prepare concept sets

Section 3: Design a main body
	
Section 4: Report in a tabular format


Updates in this version:
-------------------------
1) Used R2D2 COVID-19 concept sets and hospitalization definition instead of local institutional definition
2) Modified conceptsets for		
	a) history of diabetes
	b) history of CAD (confirm w/ Larissa conceptset)
	c) GlycoA1C concepts
3) Removed [0-17] age category
4) Added an additional column 'Outcome_name' to display the outcome name
5) All demographic categories are displayed in the results even if counts are 0
6) Added result cell suppression logic
7) Only looking for A1C labs with unit '%'. Conversion formula is applied for the 2 lab tests
8) condition_start_date < visit_start date for history of exposure variables

*************************************************************************************************************/



/*********************** Initialize variables *****************/

-- DO NOT UPDATE THESE
{DEFAULT @version = 3.1}
{DEFAULT @queryExecutionDate = (select getdate())}

-- UPDATE THESE
{DEFAULT @cdm_schema = 'OMOP_v5.OMOP5'} -- Target OMOP CDM database + schema
{DEFAULT @r2d2_schema = 'OMOP_v5.R2D2'} -- Target OMOP R2D2 database + schema
{DEFAULT @vocab_schema  = 'OMOP_Vocabulary.vocab_51'} -- Target OMOP CDM Vocabulary database + schema
{DEFAULT @sitename = 'Site10'}
{DEFAULT @minAllowedCellCount = 0}		--Threshold for minimum counts displayed in results. Possible values are 0 or 11


--Please update of all concept_ids of units (%, mmol/mol)  other than ones listed below are used locally
--Units of Glycemic control (http://54.200.195.177/atlas/#/conceptset/286/conceptset-expression)	
if object_id('tempdb.dbo.#a1c_units') is  not null drop table #a1c_units 
select * into #a1c_units
from @vocab_schema.concept
where concept_id in (8554, 9579);	-- %, mmol/mol


/************************************************************************************************************* 
	Section 1: Get COVID hospitalizations using R2D2 concept sets 
**************************************************************************************************************/
drop table if exists #covid_hsp;
create table #covid_hsp (
		visit_occurrence_id bigint 
		, person_id bigint
		, visit_concept_id bigint
		, visit_start_datetime datetime
		, visit_end_datetime datetime
		, discharge_to_concept_id bigint
		, discharge_to_source_value varchar(256)
		, AgeAtVisit int
		, cohort_start_date datetime
		, days_bet_COVID_tst_hosp int
		, death_datetime datetime
		, Hospital_mortality int
		, rownum int
	);



insert into #covid_hsp (visit_occurrence_id, person_id, visit_concept_id, visit_start_datetime, visit_end_datetime
		, discharge_to_concept_id, discharge_to_source_value, AgeAtVisit,  cohort_start_date, days_bet_COVID_tst_hosp 
		, death_datetime, Hospital_mortality, rownum)
exec @r2d2_schema.sp_identify_hospitalization_encounters;	--- gets COVID hospitalizations



/************************************************************************************************************* 
	Section 2: Concept sets specific to question (R2D2 Atlas)
**************************************************************************************************************/


	-- Variables of interest
	--(a) History of diabetes (http://54.200.195.177/atlas/#/conceptset/39/conceptset-export)
	if object_id('tempdb.dbo.#diabetes_hx_concepts') is  not null drop table #diabetes_hx_concepts 
	select * into #diabetes_hx_concepts 
	from @vocab_schema.concept 
	where concept_id in (192279,193323,195771,200687,201254,201530,201531,201820,201826,318712,321822,376065,376112,376114,376683,376979,377552,377821,378743,380096,380097,435216,439770,442793,443238,443412,443592,443727,443729,443730,443731,443732,443733,443734,443735,443767,760977,760978,760979,760980,760989,761048,761049,761050,761051,761053,761062,761063,765373,765375,765478,765533,765650,1326491,1326492,1326493,1397833,1409105,1409106,1409107,1409147,1409148,1409150,1409151,1409152,1409154,1409193,1409194,1409195,1409200,1409201,1409206,1409207,1409208,1409209,1409212,1409213,1409214,1409215,1409216,1409266,1409267,1424971,1424972,1567906,1567907,1567908,1567909,1567910,1567911,1567912,1567913,1567914,1567915,1567916,1567917,1567918,1567919,1567920,1567921,1567922,1567940,1567941,1567942,1567943,1567944,1567945,1567946,1567947,1567948,1567949,1567950,1567951,1567952,1567953,1567954,1567955,1567956,1567957,1567958,1567959,1567960,1567961,1567962,1567963,1567964,1567965,1567966,1567967,1567968,1567969,1567970,1567971,1567972,1567973,1567974,1567975,1567976,1567977,1567978,1567979,1567980,1567981,1567982,1567983,1567984,1567985,1567986,1567987,1567988,3060915,3064068,3064595,3075063,3078510,3079049,3079758,3080100,3082727,3169474,3172958,3178281,3178971,3180411,3182725,3183485,3191208,3192052,3192767,3192955,3193274,3194082,3194119,3194332,3196797,3198118,3198350,3260155,3318274,3469133,4006979,4008576,4009303,4016047,4019513,4023792,4027121,4029420,4029422,4029423,4030061,4030064,4030066,4030664,4033942,4034960,4034961,4034962,4034963,4034964,4044391,4044392,4044393,4046332,4047906,4048028,4048029,4048202,4054812,4055679,4060085,4061725,4062687,4063042,4063043,4063569,4065354,4079850,4082346,4082347,4082348,4084643,4087682,4095288,4096041,4096042,4096670,4096671,4099214,4099215,4099216,4099334,4099651,4099652,4099653,4099741,4101478,4101887,4101892,4102018,4102176,4105016,4105172,4105173,4105639,4114426,4114427,4128019,4128221,4129225,4129378,4129379,4129515,4129516,4129520,4129524,4129525,4130162,4130164,4130165,4131117,4131907,4131908,4136889,4137220,4140466,4140808,4142579,4143529,4143689,4143857,4144583,4145827,4147504,4147577,4147719,4151453,4151946,4152858,4159742,4161670,4161671,4162095,4162239,4164174,4164175,4164176,4164632,4169240,4171406,4174977,4175440,4176925,4177050,4178452,4178790,4189418,4191611,4192852,4193704,4194970,4195043,4195044,4195045,4195498,4196141,4198296,4199039,4200875,4201636,4202383,4203110,4206115,4206150,4209538,4210128,4210129,4210872,4210874,4212441,4212631,4215719,4215961,4218499,4220821,4221344,4221487,4221495,4221933,4221962,4222415,4222553,4222687,4222876,4223303,4223463,4223734,4223739,4224254,4224419,4224709,4224879,4225055,4225656,4226121,4226238,4226354,4226798,4227210,4227657,4228112,4228443,4230254,4234742,4235260,4235410,4236285,4237068,4240589,4242528,4243625,4245270,4247107,4252356,4252384,4255399,4255400,4255401,4262282,4263090,4265913,4266041,4266042,4266637,4269870,4269871,4270049,4290822,4290823,4294429,4304377,4304701,4307319,4307799,4311708,4321756,4327944,4334884,4336000,4338900,4338901,35206875,35206877,35206878,35206879,35206880,35206881,35206882,35206883,35206884,35206885,35210610,35625717,35625718,35625719,35625722,35625723,35625724,35626036,35626037,35626038,35626039,35626041,35626042,35626043,35626044,35626046,35626047,35626067,35626068,35626069,35626070,35626071,35626072,35626087,35626088,35626761,35626762,35626763,35626764,35626765,35626904,35626905,36674199,36674200,36674651,36674652,36674752,36674753,36674765,36674766,36684827,36685758,36712670,36712686,36712687,36713094,36713275,36714116,36715051,36715417,36715571,36716258,36716853,36717156,36717215,37016179,37016180,37016348,37016349,37016350,37016353,37016354,37016355,37016356,37016357,37016358,37016767,37016768,37017221,37017429,37017430,37017431,37017432,37018196,37018566,37018728,37018912,37109305,37110041,37110062,37110068,37110593,37116379,37116960,37200027,37200028,37200029,37200030,37200031,37200032,37200033,37200034,37200035,37200036,37200037,37200038,37200039,37200040,37200041,37200042,37200043,37200044,37200045,37200046,37200047,37200048,37200049,37200050,37200051,37200052,37200053,37200054,37200055,37200056,37200057,37200058,37200059,37200060,37200061,37200062,37200063,37200064,37200065,37200066,37200067,37200068,37200069,37200070,37200071,37200072,37200073,37200074,37200075,37200076,37200077,37200078,37200079,37200080,37200081,37200082,37200083,37200141,37200142,37200143,37200144,37200145,37200146,37200147,37200148,37200149,37200150,37200151,37200152,37200153,37200154,37200155,37200156,37200157,37200158,37200159,37200160,37200161,37200162,37200163,37200164,37200165,37200166,37200167,37200168,37200169,37200170,37200171,37200172,37200173,37200174,37200175,37200176,37200177,37200178,37200179,37200180,37200181,37200182,37200183,37200184,37200185,37200186,37200187,37200188,37200189,37200190,37200191,37200192,37200193,37200194,37200195,37200196,37200197,37200198,37200199,37200200,37200201,37200202,37200203,37200204,37200205,37200206,37200207,37200208,37200209,37200210,37200211,37200212,37200213,37200214,37200215,37200216,37200217,37200218,37200219,37200220,37200221,37200222,37200223,37200224,37200225,37200226,37200227,37200228,37200229,37200230,37200231,37200232,37200233,37200234,37200235,37200236,37200237,37200238,37200239,37200240,37200241,37200242,37200243,37200244,37200245,37200246,37200247,37200248,37200249,37200250,37200251,37200252,37200253,37200254,37200255,37200256,37200257,37200258,37200259,37200260,37200261,37200262,37200263,37200264,37200265,37200266,37200267,37200268,37200269,37200270,37200271,37200272,37200273,37200274,37200275,37200276,37200277,37200278,37200279,37200280,37200281,37200282,37200283,37200284,37200285,37200286,37200287,37200288,37200289,37200290,37200291,37200292,37200293,37200294,37200295,37200296,37200297,37200298,37200299,37200300,37200301,37200302,37200303,37200304,37200305,37200306,37200307,37200308,37200309,37200310,37200311,37204232,37204277,37204818,37309630,37311253,37311254,37311329,37311453,37311673,37311832,37311833,37312019,37312198,37312200,37312201,37312202,37312203,37312204,37312205,37312207,37312218,37396524,40386811,40386812,40389544,40389545,40389546,40389547,40394501,40395653,40398678,40480000,40480031,40482458,40482801,40482883,40483315,40484648,40484649,40485020,40769338,42535539,42535540,42536400,42536603,42536604,42536605,42537681,42538169,42538560,42538715,42539022,42689695,43021173,43022019,43530656,43530660,43530685,43530689,43530690,43531006,43531011,43531012,43531013,43531014,43531015,43531016,43531017,43531018,43531019,43531020,43531559,43531562,43531563,43531564,43531565,43531566,43531577,43531578,43531588,43531597,43531608,43531616,43531640,43531641,43531642,43531643,43531644,43531645,43531651,43531653,44787902,44789318,44789319,44793113,44793114,44794588,44797029,44799392,44800669,44805212,44805628,44808385,44809658,44809809,44810261,44812736,44813733,44819498,44819499,44819503,44819504,44820047,44820680,44820681,44820682,44820685,44821785,44821786,44821787,44822932,44822933,44822934,44824071,44824072,44825262,44825263,44826461,44827617,44828788,44828789,44828790,44828791,44828792,44828793,44829876,44829877,44829878,44829881,44829882,44831044,44831047,44832187,44832188,44832189,44832191,44832192,44833364,44833365,44833368,44834547,44834548,44835747,44835748,44835749,44835750,44835751,44836911,44836912,44836913,44836914,44836915,44836918,45429953,45433684,45459863,45461458,45466640,45486724,45493280,45493635,45533009,45533010,45533011,45533017,45533018,45533019,45533020,45533021,45533022,45533023,45533024,45537953,45537954,45537958,45537960,45537961,45537962,45537963,45542728,45542729,45542730,45542731,45542736,45542737,45542738,45542741,45547617,45547618,45547621,45547622,45547623,45547624,45547625,45547626,45547627,45547632,45547633,45547634,45547635,45552372,45552373,45552374,45552375,45552379,45552381,45552382,45552383,45552385,45552386,45552388,45557106,45557107,45557110,45557111,45557112,45557113,45557116,45561940,45561941,45561942,45561943,45561947,45561948,45561949,45561953,45561954,45561955,45561956,45561957,45561958,45566723,45566724,45566729,45566731,45566733,45566734,45566735,45566736,45566737,45571649,45571650,45571651,45571652,45571654,45571658,45571659,45571661,45571662,45576437,45576438,45576439,45576440,45576443,45576446,45576447,45576448,45581342,45581343,45581344,45581349,45581350,45581352,45581353,45581354,45581355,45581358,45581359,45586132,45586138,45586139,45586140,45586142,45586143,45586144,45586145,45591023,45591026,45591027,45591029,45591030,45591031,45591033,45591034,45595789,45595790,45595791,45595792,45595793,45595794,45595795,45595797,45595798,45595799,45595802,45595803,45595804,45595805,45600633,45600634,45600636,45600637,45600638,45600639,45600640,45600641,45600642,45600644,45605392,45605393,45605394,45605395,45605397,45605398,45605401,45605402,45605403,45605404,45605405,45757065,45757073,45757074,45757075,45757077,45757266,45757277,45757278,45757280,45757362,45757363,45757392,45757393,45757432,45757435,45757444,45757445,45757446,45757447,45757449,45757450,45757474,45757499,45757507,45757508,45757535,45757604,45757674,45763582,45763583,45763584,45763585,45766050,45766051,45766052,45766963,45768456,45769828,45769829,45769830,45769832,45769833,45769834,45769835,45769836,45769837,45769872,45769873,45769875,45769876,45769888,45769890,45769891,45769892,45769894,45769901,45769902,45769903,45769904,45769905,45769906,45770830,45770831,45770832,45770880,45770881,45770883,45770902,45770928,45770986,45771064,45771067,45771072,45771075,45771533,45772019,45772060,45772914,45773064,45773567,45773576,45773688,46269764,46270562,46274058,46274096);

	-- COVID patients with history of diabetes
	if object_id('tempdb.dbo.#diabetes_hx') is  not null drop table #diabetes_hx 
	select distinct *
	into #diabetes_hx from (
	select cp.person_id, cp.visit_occurrence_id, cp.visit_concept_id, cp.visit_start_datetime, cp.visit_end_datetime
	, cp.AgeAtVisit, cp.cohort_start_date, cp.death_datetime, cp.Hospital_mortality, vd.condition_start_datetime
	from #covid_hsp cp 
	join @cdm_schema.condition_occurrence vd on  cp.person_id = vd.person_id 
	join #diabetes_hx_concepts mv on mv.concept_id = vd.condition_concept_id
	where vd.condition_start_datetime <= cp.visit_start_datetime 
	union
	select cp.person_id, cp.visit_occurrence_id, cp.visit_concept_id, cp.visit_start_datetime, cp.visit_end_datetime
	, cp.AgeAtVisit, cp.cohort_start_date, cp.death_datetime, cp.Hospital_mortality, vd.observation_datetime
	from #covid_hsp cp 
	join @cdm_schema.observation vd on  cp.person_id = vd.person_id 
	join #diabetes_hx_concepts mv on mv.concept_id = vd.observation_concept_id
	where vd.observation_datetime <= cp.visit_start_datetime 
	) a;


	--(b) History of heart disease (http://54.200.195.177/atlas/#/conceptset/262/conceptset-export)
	if object_id('tempdb.dbo.#heart_disease_hx_concepts') is  not null drop table #heart_disease_hx_concepts 
	select * into #heart_disease_hx_concepts 
	from @vocab_schema.concept 
	where concept_id in (19411,19412,312327,312922,314666,315286,315296,315830,315832,316427,316995,317576,319039,319844,321109,321318,321879,434376,436706,438170,438438,438447,439693,441579,444406,761735,761736,761737,761921,762041,762042,762043,762044,764123,764149,764507,765132,979219,1006233,1014826,1033994,1034903,1034904,1326588,1326589,1326590,1326591,1397830,1397943,1413762,1413763,1413764,1413765,1413766,1413767,1413768,1413769,1413770,1413771,1413772,1413773,1413775,1413776,1413777,1413778,1413779,1413780,1413781,1413782,1413783,1413784,1413785,1413786,1413787,1413788,1413789,1413790,1413791,1413792,1413793,1413794,1413795,1413796,1413797,1413798,1413799,1413800,1413801,1413802,1413803,1413804,1413805,1413806,1413807,1413808,1413809,1413810,1413811,1413812,1413813,1413814,1413815,1413816,1413817,1413818,1413819,1413820,1413821,1413822,1413823,1413824,1413825,1413826,1413827,1413828,1413847,1413848,1413849,1413850,1413851,1413852,1413855,1413856,1413857,1413858,1413859,1413860,1413861,1413862,1413863,1413864,1413865,1413866,1413867,1413868,1413869,1413870,1413871,1413872,1413873,1413874,1413875,1413876,1413877,1413878,1413879,1413884,1413885,1413886,1413887,1413890,1413891,1413892,1413893,1413894,1413895,1413896,1413897,1413898,1424724,1424725,1424726,1425640,1425641,1425643,1425644,1425645,1425646,1425647,1425648,1425649,1425650,1425651,1435706,1435707,1435708,1569125,1569126,1569127,1569128,1569129,1569130,1569131,1569132,1569133,1569134,1569135,1569136,1569137,1569138,1569139,1569140,1569141,1569142,1569143,1569144,1569145,1569146,2617523,2617524,2617525,2617526,2617527,2617528,2617529,2617530,2617531,2721038,3045668,3066041,3070934,3071085,3073843,3077415,3080684,3083981,3090967,3090977,3105653,3105654,3105655,3105656,3105657,3105658,3105659,3105660,3105661,3105662,3105663,3105664,3105665,3105667,3105668,3105670,3105671,3109459,3124308,3124310,3124311,3124312,3124314,3124315,3124316,3124317,3124318,3124320,3124321,3124322,3124323,3124324,3124325,3124326,3124327,3124328,3124329,3124330,3124331,3124332,3124334,3124335,3124336,3124337,3124338,3124339,3124340,3124341,3124343,3124344,3124345,3124346,3124347,3124352,3124353,3124354,3124355,3124356,3124357,3124358,3124362,3124363,3124364,3124365,3124366,3124367,3124368,3124369,3124370,3124784,3129574,3129575,3129576,3129577,3129578,3129579,3130805,3137844,3137845,3137846,3137847,3137861,3139512,3139731,3139732,3139733,3140604,3141574,3141575,3141576,3143807,3144966,3146935,3146936,3146937,3146938,3148588,3149684,3150090,3150524,3151889,3151890,3151891,3151892,3156008,3156009,3158367,3158718,3158719,3159804,3161731,3161942,3162978,3164123,3164593,3168727,3169041,3169436,3173997,3174892,3175841,3176113,3176474,3177052,3177096,3179318,3179582,3179898,3180023,3180244,3180855,3182125,3183424,3183490,3186907,3187235,3188263,3188576,3188631,3189327,3189643,3192995,3214141,3216060,3217847,3217898,3218091,3218408,3219084,3219086,3219646,3221811,3223704,3224198,3224304,3224849,3225296,3225686,3227072,3227813,3228808,3230226,3231674,3232330,3233032,3234409,3234802,3235179,3235456,3235693,3237680,3237963,3238501,3239036,3239246,3240128,3240354,3242010,3242680,3242716,3242781,3243288,3243367,3243465,3243714,3244523,3244654,3244948,3245136,3246244,3247174,3247995,3248659,3248672,3248710,3249719,3250661,3252645,3252808,3253015,3253407,3253508,3253997,3254581,3254609,3254956,3256546,3257115,3257412,3258742,3260293,3261525,3262062,3262163,3262342,3262618,3265566,3265682,3267395,3267523,3268621,3269540,3270140,3270154,3270195,3270291,3274385,3274916,3276958,3277822,3278158,3278237,3278356,3278610,3279036,3280467,3281907,3284651,3284893,3285728,3286074,3287884,3288900,3289297,3289903,3291559,3291744,3293560,3293575,3293630,3293943,3294530,3295395,3295771,3296755,3296807,3297163,3297270,3298070,3298460,3299310,3300836,3300957,3301011,3301159,3301793,3302220,3303908,3305028,3306997,3307283,3307457,3309086,3309601,3309856,3310220,3310363,3310720,3311668,3313589,3316383,3317225,3317855,3318170,3318960,3320734,3321303,3321454,3322144,3322464,3322473,3322538,3324009,3324139,3324641,3324685,3324706,3325341,3325529,3327769,3328503,3329467,3330322,3335572,3335613,3335943,3336001,3336148,3336168,3336461,3336644,3337076,3337286,3337768,3337786,3338074,3338843,3339320,3339323,3339417,3339829,3340343,3341717,3341775,3341927,3343786,3344283,3345522,3345755,3346512,3346580,3346861,3346963,3347174,3347433,3347481,3348169,3348222,3348558,3348714,3348953,3350658,3352495,3354257,3354500,3354876,3355473,3355916,3356107,3356801,3356877,3359182,3359266,3360856,3363474,3363502,3363545,3364588,3364646,3365650,3365668,3366343,3367272,3368148,3368367,3368563,3369142,3369676,3370300,3370625,3371233,3372395,3372926,3373627,3374452,3374482,3375071,3375739,3375827,3376163,3376192,3377102,3377126,3378520,3378659,3378750,3379313,3380086,3380569,3380933,3382914,3383496,3383586,3383695,3383725,3384372,3385802,3385912,3387594,3387932,3388106,3388764,3389026,3389158,3389271,3389307,3390289,3390355,3390356,3391225,3391926,3393523,3393704,3393799,3393893,3395154,3395901,3396075,3399396,3399597,3399944,3400395,3402049,3402708,3402832,3402848,3402972,3403164,3403562,3404189,3404781,3405792,3405851,3405928,3407335,3407742,3407783,3407836,3409150,3409947,3410304,3410349,3410378,3410501,3410743,3411995,3412274,3413134,3413263,3413284,3414739,3415487,3416507,3417150,3418016,3418307,3421010,3423658,3423987,3425436,3426175,3429786,3431418,3433059,3433350,3435311,3447099,3447696,3448898,3450861,3451459,3451512,3451892,3459393,3463324,3466679,3477106,4011131,4016142,4020601,4027245,4029361,4029362,4029827,4030427,4030582,4046022,4048534,4051874,4058723,4068938,4069185,4069186,4070921,4078531,4080593,4096252,4097848,4104178,4107246,4108172,4108214,4108215,4108216,4108217,4108218,4108668,4108669,4108670,4108671,4108672,4108673,4108675,4108676,4108677,4108870,4108872,4108873,4108874,4108875,4108876,4109483,4109484,4109485,4109486,4109487,4109488,4109489,4109490,4109491,4109642,4109643,4109644,4109645,4109646,4109647,4109648,4109649,4110951,4110952,4110953,4110954,4110955,4110956,4110958,4110962,4111389,4111390,4111391,4111392,4111393,4111394,4111395,4113297,4113298,4113299,4113300,4113301,4113302,4113303,4116486,4119455,4119456,4119457,4119613,4119942,4119943,4119944,4119945,4119946,4119947,4119948,4119949,4119950,4119951,4121464,4121465,4121466,4121467,4121468,4121641,4124682,4124683,4124684,4124685,4124686,4124846,4126801,4127089,4134723,4137350,4138833,4141498,4145721,4146343,4147223,4151046,4152843,4153091,4154704,4155007,4155008,4155009,4155962,4155963,4160781,4160782,4160783,4161455,4161456,4161457,4161973,4161974,4161997,4162739,4168972,4170094,4172865,4173171,4173632,4175846,4178129,4178321,4178622,4178750,4179076,4180760,4182318,4184827,4185302,4185932,4186397,4187067,4187852,4188546,4188638,4189939,4194618,4198141,4199962,4200113,4201629,4206334,4206867,4206868,4207921,4207922,4208928,4209308,4209541,4209542,4215140,4215259,4218328,4225958,4231426,4242670,4243371,4243372,4252385,4253217,4258690,4262446,4263712,4264145,4265210,4267568,4270024,4270354,4275436,4275907,4296227,4296653,4298081,4303359,4304192,4310270,4323202,4324413,4324758,4324893,4328721,4329430,4329847,4341435,4354076,4354077,21491691,21491699,35207680,35207681,35207682,35207683,35207684,35207685,35207686,35207687,35207688,35207689,35207697,35207698,35207700,35207701,35207702,35207705,35207706,35210520,35210828,35225418,35610087,35610089,35610091,35610093,35611570,35611571,35615052,35615053,35615119,36307799,36309684,36683267,36712779,36712982,36712983,36712984,36714444,37016181,37016755,37017177,37018767,37108686,37108804,37115756,37201936,37201939,37204188,37204189,37204854,37209632,37309626,37309630,37309713,37394480,40260483,40302090,40302101,40323862,40323863,40323864,40323865,40323866,40323867,40323868,40323869,40323871,40323872,40323873,40323874,40323875,40323876,40323878,40323879,40323882,40323883,40332757,40345176,40345178,40348851,40358306,40394111,40394113,40398434,40398444,40398829,40398839,40398840,40398841,40398842,40398843,40398844,40398850,40398853,40398858,40398859,40398860,40398861,40398863,40398864,40398865,40398866,40398869,40398879,40398881,40398884,40398900,40398902,40398903,40398904,40398905,40398906,40398907,40404019,40404020,40404021,40404022,40404023,40406689,40429840,40436948,40436950,40436953,40436955,40481919,40482719,40483833,40488003,40488025,40489974,40515857,40524164,40525954,40530984,40537225,40540497,40547656,40552079,40552085,40552086,40552087,40572006,40572007,40587821,40597938,40623902,40634151,40637225,40641917,40757908,40769338,42488353,42488354,42488355,42488356,42488359,42488360,42488361,42488362,42488363,42488364,42488365,42488366,42488367,42488368,42488369,42488370,42488371,42488381,42488382,42488384,42488385,42488386,42488387,42488388,42488390,42488392,42488393,42488394,42495845,42496226,42505904,42505973,42536628,42536629,42537729,42537730,42872402,42873050,42873051,42873052,43020460,43020461,43020480,43020492,43020561,43020569,43020570,43020571,43020572,43020573,43020574,43020575,43020576,43020579,43020580,43020660,43020689,43020880,43021193,43021294,43021301,43021302,43021303,43021304,43021305,43021306,43021307,43021308,43021309,43021310,43021311,43021312,43021313,43021314,43021432,43021434,43021435,43021436,43021437,43021470,43021472,43021474,43021475,43021476,43021570,43021572,43021573,43021574,43021578,43021579,43021580,43021581,43021582,43021615,43021616,43021617,43021618,43021619,43021621,43021627,43021628,43021630,43021631,43021795,43021796,43021885,43021886,43021888,43021937,43021973,43022025,43022026,43022037,43022038,43022045,43531588,44782693,44782696,44782697,44782698,44782699,44782700,44782701,44782708,44782712,44782769,44783200,44783791,44784623,44795635,44795793,44798535,44800520,44800526,44806109,44808600,44819697,44819698,44819699,44819700,44819701,44819702,44820857,44820858,44820859,44820860,44820861,44820864,44821952,44821953,44823111,44824237,44825428,44825429,44825430,44825433,44825752,44826635,44826636,44827782,44827783,44827784,44827785,44828972,44828973,44828974,44828975,44830079,44830080,44830081,44831236,44831237,44831238,44832372,44832373,44832374,44832375,44832376,44833561,44833562,44833563,44834718,44834719,44834720,44834721,44834722,44834723,44834724,44834727,44835926,44835927,44835928,44835930,44835931,44835932,44837099,44837100,45420353,45420354,45420359,45423521,45423522,45423524,45423525,45426796,45426797,45426799,45428348,45430132,45430133,45430134,45430135,45433413,45433414,45433415,45433416,45433420,45433839,45436735,45436736,45436737,45436738,45436739,45436740,45440042,45440044,45440045,45440046,45443329,45443330,45443368,45446683,45446684,45446685,45450010,45450433,45453322,45453324,45453325,45453326,45453738,45456732,45456734,45457243,45460025,45460026,45461636,45463488,45463489,45466858,45466859,45466860,45467292,45470292,45470725,45471557,45473545,45473546,45473547,45476932,45476933,45480262,45480264,45480266,45483526,45483528,45483566,45483967,45486897,45486898,45490176,45490177,45490216,45490564,45490926,45493467,45493493,45494273,45496744,45496745,45496746,45500067,45500068,45500069,45500493,45503419,45503420,45503421,45503422,45503423,45503424,45503425,45506683,45506684,45506686,45510043,45510044,45510045,45513423,45513424,45513425,45513426,45513463,45516825,45516826,45520056,45520057,45520058,45520473,45520474,45521404,45523368,45523369,45523370,45524942,45524943,45524945,45524947,45524948,45525234,45526016,45526017,45526018,45526020,45526021,45526307,45527005,45527008,45527009,45527010,45527977,45527978,45528264,45528967,45529947,45529949,45530252,45530941,45530942,45530943,45532012,45532013,45533435,45533436,45533439,45538370,45538372,45538373,45538374,45538375,45538376,45538377,45542496,45543166,45543167,45543168,45548010,45548011,45548012,45548013,45552781,45552782,45552783,45552784,45557536,45557538,45557539,45562339,45562340,45562341,45562342,45562343,45563219,45563241,45567165,45567166,45567168,45572078,45572079,45572080,45572081,45572082,45576865,45576866,45576868,45581765,45581766,45586570,45586571,45586572,45586573,45586574,45586575,45591454,45591456,45591457,45591458,45591459,45591460,45591461,45596190,45596191,45596192,45596194,45596195,45596196,45596197,45596198,45596199,45601022,45601024,45601025,45601026,45601027,45601028,45605779,45605780,45605781,45605784,45605785,45605786,45605788,45610463,45610464,45611172,45611585,45612406,45612407,45614138,45615281,45615978,45616022,45616764,45617662,45617763,45618281,45618939,45766075,45766076,45766113,45766114,45766115,45766116,45766150,45766151,45766165,45766238,45766241,45766267,45771322,45773170,45773498,45907329,45908195,45908202,45908251,45908252,45908253,45908359,45908480,45908931,45909927,45909928,45910226,45910663,45910908,45910947,45910971,45910988,45911597,45911972,45913328,45913848,45913959,45914753,45914776,45914777,45914783,45914789,45915205,45915508,45916516,45916521,45916722,45916733,45916839,45916999,45917061,45917176,45919548,45921296,45921297,45922003,45923543,45923841,45924516,45924517,45924570,45924828,45924997,45925001,45925430,45926362,45926657,45926773,45927639,45929138,45929317,45929583,45929839,45930537,45931830,45932321,45932556,45932825,45932826,45932909,45932926,45933433,45934286,45934287,45934895,45936380,45939029,45939054,45939061,45939063,45939730,45940158,45940205,45940256,45940522,45940601,45940851,45941096,45941457,45941502,45942179,45943027,45943085,45943730,45944016,45944102,45945108,45945470,45945539,45945568,45945685,45946023,45947291,45948608,45949456,45950221,45951078,45951079,45951258,45953953,45955194,45955273,45955290,45955291,45955415,45955416,45955417,45955418,45956110,45956515,46256352,46269996,46270158,46270159,46270160,46270161,46270162,46270163,46270164,46273495,46274044); 
	
	
	-- COVID patients with history of heart disease
	if object_id('tempdb.dbo.#heart_disease_hx') is  not null drop table #heart_disease_hx 
	select distinct *
	into #heart_disease_hx from (
	select cp.person_id, cp.visit_occurrence_id, cp.visit_concept_id, cp.visit_start_datetime, cp.visit_end_datetime
	, cp.AgeAtVisit, cp.cohort_start_date, cp.death_datetime, cp.Hospital_mortality, vd.condition_start_datetime
	from #covid_hsp cp 
	join @cdm_schema.condition_occurrence vd on  cp.person_id = vd.person_id 
	join #heart_disease_hx_concepts mv on mv.concept_id = vd.condition_concept_id
	where vd.condition_start_datetime <= cp.visit_start_datetime 
	union
	select cp.person_id, cp.visit_occurrence_id, cp.visit_concept_id, cp.visit_start_datetime, cp.visit_end_datetime
	, cp.AgeAtVisit, cp.cohort_start_date, cp.death_datetime, cp.Hospital_mortality, vd.observation_datetime
	from #covid_hsp cp 
	join @cdm_schema.observation vd on  cp.person_id = vd.person_id 
	join #heart_disease_hx_concepts mv on mv.concept_id = vd.observation_concept_id
	where vd.observation_datetime <= cp.visit_start_datetime 
	union
	select cp.person_id, cp.visit_occurrence_id, cp.visit_concept_id, cp.visit_start_datetime, cp.visit_end_datetime
	, cp.AgeAtVisit, cp.cohort_start_date, cp.death_datetime, cp.Hospital_mortality, vd.drug_exposure_start_datetime
	from #covid_hsp cp 
	join @cdm_schema.drug_exposure vd on  cp.person_id = vd.person_id 
	join #heart_disease_hx_concepts mv on mv.concept_id = vd.drug_concept_id
	where vd.drug_exposure_start_datetime <= cp.visit_start_datetime) a;



	--(c1) Glycemic control (http://54.200.195.177/atlas/#/conceptset/42/conceptset-export)
	if object_id('tempdb.dbo.#A1C_concepts_NGSP') is  not null drop table #A1C_concepts_NGSP 
	select * into #A1C_concepts_NGSP
	from @vocab_schema.concept 
	where concept_id in (2106236,2106238,2106252,2212392,3003309,3004410,3005673,3007263,3034639,4184637,4197971,42869630) 
	union
	--(c2) Glycemic control (http://54.200.195.177/atlas/#/conceptset/279/conceptset-expression)
	select * 
	from @vocab_schema.concept 
	where concept_id in (40762352,44793001);


	--(c3)  Glycemic control (http://54.200.195.177/atlas/#/conceptset/285/conceptset-expression)
	if object_id('tempdb.dbo.#A1C_concepts_clin_obs') is  not null drop table #A1C_concepts_clin_obs 
	select * into #A1C_concepts_clin_obs
	from @vocab_schema.concept 
	where concept_id in (36304734); 


	-- Glycemic control for COVID patients 
	--(The latest measurement of the laboratory value Hemoglobin A1C during an active encounter, or before an encounter with a look back period of 365 days.)
	if object_id('tempdb.dbo.#A1C') is  not null drop table #A1C  
	select  *
	, ROW_NUMBER() over (partition by a.person_id order by conceptsetType asc, measurement_datetime desc ) rownum
	into #A1C from (
	select distinct cp.person_id, cp.visit_occurrence_id, cp.visit_concept_id, cp.visit_start_datetime, cp.visit_end_datetime
	, cp.AgeAtVisit, cp.death_datetime, cp.Hospital_mortality, vd.measurement_datetime
	, 'c1_c2' as conceptsetType				--corresponds to conceptsets c1 and c2 above
	, vd.value_as_number, vd.unit_concept_id, vd.unit_source_value

	--- convert value if units is mmol/mol
	, case when ( unit_source_value = '[%]'	or unit_concept_id = 8554) then value_as_number 
			when (unit_source_value = 'mmol/mol' or unit_concept_id = 9579) then ((0.09148 * vd.value_as_number) + 2.152) ---convert IFCC to NGSP
		end as modified_value_as_number  

	, case when ( unit_source_value = '[%]'	or unit_concept_id = 8554) then unit_concept_id 
			when (unit_source_value = 'mmol/mol' or unit_concept_id = 9579) then 8554 ---convert IFCC to NGSP
		end as modified_unit_concept_id

	, case when ( unit_source_value = '[%]'	or unit_concept_id = 8554) then unit_source_value 
			when (unit_source_value = 'mmol/mol' or unit_concept_id = 9579) then '[%]' ---convert IFCC to NGSP
		end as modified_unit_source_value

	from #covid_hsp cp 
	join @cdm_schema.measurement vd on  cp.person_id = vd.person_id 
	join #A1C_concepts_NGSP mv on mv.concept_id = vd.measurement_concept_id
	where ( vd.measurement_datetime between cp.visit_start_datetime and  cp.visit_end_datetime --measurement during active visit 
			or  datediff(dd, vd.measurement_datetime, cp.visit_start_datetime) between 0 and 365 -- measurement 365 days before visit start date
	)
	and (			---exclude other units except % and mmol/mol
		unit_concept_id in (select concept_id from #a1c_units) 
		or 
		unit_source_value in (select concept_code from #a1c_units)
		) 

	union		--clinical observation concepts (use only if c1 and c2 are absent)
		select cp.person_id, cp.visit_occurrence_id, cp.visit_concept_id, cp.visit_start_datetime, cp.visit_end_datetime
	, cp.AgeAtVisit, cp.death_datetime, cp.Hospital_mortality, vd.measurement_datetime
	, 'c3' as conceptsetType									--- corresponds to conceptset c3 (above)
	, vd.value_as_number, vd.unit_concept_id, vd.unit_source_value

	--- convert value if units is mmol/mol
	, case when ( unit_source_value = '[%]'	or unit_concept_id = 8554) then value_as_number 
			when (unit_source_value = 'mmol/mol' or unit_concept_id = 9579) then ((0.09148 * vd.value_as_number) + 2.152)	---convert IFCC to NGSP
		end as modified_value_as_number

	, case when ( unit_source_value = '[%]'	or unit_concept_id = 8554) then unit_concept_id 
			when (unit_source_value = 'mmol/mol' or unit_concept_id = 9579) then 8554		---convert IFCC to NGSP
		end as modified_unit_concept_id

	, case when ( unit_source_value = '[%]'	or unit_concept_id = 8554) then unit_source_value 
			when (unit_source_value = 'mmol/mol' or unit_concept_id = 9579) then '[%]'			---convert IFCC to NGSP
		end as modified_unit_source_value

	from #covid_hsp cp 
	join @cdm_schema.measurement vd on  cp.person_id = vd.person_id 
	join #A1C_concepts_clin_obs mv on mv.concept_id = vd.measurement_concept_id
	where ( vd.measurement_datetime between cp.visit_start_datetime and  cp.visit_end_datetime --measurement during active visit 
			or  datediff(dd, vd.measurement_datetime, cp.visit_start_datetime) between 0 and 365 -- measurement 365 days before visit start date
	)
	and (			---exclude other units except % and mmol/mol
		unit_concept_id in (select concept_id from #a1c_units) 
		or 
		unit_source_value in (select concept_code from #a1c_units)
		)
	) a;


/*************************************************************************************************************  
Section 3
Question in Text: Among adults hospitalized with COVID-19, what is the mortality rate stratified by: 
	(a) history of diabetes 
	(b) history of heart disease 
	(c) hemoglobin A1c level (<=7% and >7%)

*************************************************************************************************************/


	-- Create full set of permissible concepts  (gender, race, ethnicity, age-range)
	if object_id('tempdb.dbo.#gender') is not null drop table #gender  
	select concept_id covariate_id, domain_id covariate_name, concept_name covariate_value 
	into #gender from @vocab_schema.CONCEPT 
	where domain_id = 'Gender' and standard_concept = 'S' 
	union 
	select 0, 'Gender', 'Unknown';
	

	if object_id('tempdb.dbo.#race') is not null drop table #race  
	select concept_id covariate_id, domain_id covariate_name, concept_name covariate_value  
	into #race from @vocab_schema.CONCEPT 
	where domain_id = 'race' and standard_concept = 'S' 
	and concept_code  in ('1','2','3','4','5')
	union 
	select 0, 'Race', 'Unknown';
	
	
	if object_id('tempdb.dbo.#ethnicity') is not null drop table #ethnicity  
	select concept_id covariate_id, domain_id covariate_name, concept_name covariate_value  
	into #ethnicity from @vocab_schema.CONCEPT 
	where domain_id = 'ethnicity' and standard_concept = 'S' 
	union 
	select 0, 'Ethnicity', 'Unknown';
	 

	if object_id('tempdb.dbo.#age_range') is not null drop table #age_range  
	select 1 covariate_id, 'Age_Range' covariate_name, '[18 - 30]' covariate_value into #age_range  union 
	select 2, 'Age_Range', '[31 - 40]' union 
	select 3, 'Age_Range', '[41 - 50]' union 
	select 4, 'Age_Range', '[51 - 60]' union 
	select 5, 'Age_Range', '[61 - 70]' union 
	select 6, 'Age_Range', '[71 - 80]' union 
	select 7, 'Age_Range', '[81 - ]' union
	select 8, 'Age_Range', 'Unknown'; 	
	

	--COVID patients with the 3 exposure variables
	if object_id('tempdb.dbo.#patients') is  not null drop table #patients 
	select distinct hsp.visit_occurrence_id, hsp.person_id, hsp.visit_concept_id, hsp.visit_start_datetime, hsp.visit_end_datetime
	, hsp.discharge_to_concept_id, disch_disp.concept_name Discharge_disposition
	, case when dhx.person_id is not null then 1 else 0 end as Exposure_Variable1_id
	, case when hhx.person_id is not null then 1 else 0 end as Exposure_Variable2_id
	, case when a1c.value_as_number <= 7.0 then 0
			when a1c.value_as_number > 7.0 then 1
			when a1c.value_as_number is null then 2
			end as Exposure_Variable3_id
	, a1c.modified_value_as_number [A1C_value_as_number], a1c.modified_unit_concept_id A1C_unit_concept_id, a1c.modified_unit_source_value A1C_unit_source_value
	, hsp.Hospital_mortality [Outcome_id]
	, case when gender.covariate_id is null then 0 else p.gender_concept_id end gender_concept_id 
	, case when race.covariate_id is null then 0 else p.race_concept_id end race_concept_id 
	, case when ethnicity.covariate_id is null then 0 else p.ethnicity_concept_id end ethnicity_concept_id 
	, case when round(hsp.AgeAtVisit ,2) between 18 and 30 then 1
		when round(hsp.AgeAtVisit ,2) between 31 and 40 then 2
		when round(hsp.AgeAtVisit ,2) between 41 and 50 then 3
		when round(hsp.AgeAtVisit ,2) between 51 and 60 then 4
		when round(hsp.AgeAtVisit ,2) between 61 and 70 then 5
		when round(hsp.AgeAtVisit ,2) between 71 and 80 then 6
		when round(hsp.AgeAtVisit ,2) > 80 then 7
	else 8 end as age_id
	into #patients
	from #covid_hsp hsp
	left join #diabetes_hx dhx on dhx.person_id = hsp.person_id 
	left join #heart_disease_hx hhx on hhx.person_id = hsp.person_id 
	left join (select * from #A1C where rownum = 1) a1c on a1c.person_id = hsp.person_id 
	left join @cdm_schema.person p on p.person_id = hsp.person_id
	left join @vocab_schema.concept disch_disp on disch_disp.concept_id = hsp.discharge_to_concept_id
	left join #gender gender on gender.covariate_id = p.gender_concept_id
	left join #race race on race.covariate_id = p.race_concept_id
	left join #ethnicity ethnicity on ethnicity.covariate_id = p.ethnicity_concept_id;


/**************************************************************************************************
Section 4:			Results
**************************************************************************************************/


--Section A: Results setup
	if object_id('tempdb.dbo.#Exposure_variable') is not null drop table #Exposure_variable
	select 0 Exposure_variable_id, 'History_of_Diabetes' Exposure_variable_name , 'no_history_of_diabetes' Exposure_variable_value 
	into #Exposure_variable
	union
	select 1, 'History_of_Diabetes', 'history_of_diabetes'
	union
	select 0, 'History_of_Heart_Disease', 'no_history_of_heart_disease'	
	union
	select 1, 'History_of_Heart_Disease', 'history_of_heart_disease'	
	union
	select 0, 'Glycemic_Control', '[ - 7]'	
	union
	select 1, 'Glycemic_Control', '(7 - ]'	
	union 
	select 2, 'Glycemic_Control', 'Missing';
	


	if object_id('tempdb.dbo.#Outcome') is not null drop table #Outcome  
	select 0 outcome_id, 'Hospital_Mortality' outcome_name, 'discharged_alive' outcome_value 
	into #Outcome 
	union
	select 1, 'Hospital_Mortality' , 'deceased_during_hospitalization';


--Section B: Results (History of Diabetes)
	if object_id('tempdb.dbo.#results') is not null drop table #results
	--Gender
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	into #results	
	from (select * from  #gender
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Diabetes')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable1_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.gender_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	union 

	--race
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #race
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Diabetes')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_Variable1_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.race_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 
	
	union 

	--ethnicity
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #ethnicity
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Diabetes')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable1_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.ethnicity_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	union 

	--age range
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #age_range
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Diabetes')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable1_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.age_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	union 
	 
	--Results (History of Heart Disease)
	--Gender
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #gender
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Heart_Disease')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable2_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.gender_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	union 

	--race
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #race
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Heart_Disease')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable2_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.race_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 
	
	union 

	--ethnicity
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #ethnicity
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Heart_Disease')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable2_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.ethnicity_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	
	union 

	--age range
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #age_range
			cross join  (select * from #Exposure_variable where Exposure_variable_name ='History_of_Heart_Disease')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable2_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.age_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	union

	--Results (Glycemic Control)
	--Gender
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #gender
			cross join  (select * from #Exposure_variable where Exposure_variable_name = 'Glycemic_Control')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable3_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.gender_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	union 

	--race
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #race
			cross join  (select * from #Exposure_variable where Exposure_variable_name = 'Glycemic_Control')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable3_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.race_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 
	
	union 

	--ethnicity
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #ethnicity
			cross join  (select * from #Exposure_variable where Exposure_variable_name  = 'Glycemic_Control')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable3_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.ethnicity_concept_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	
	union 

	--age range
	select '@sitename' Institution
	, m.covariate_name 
	, m.covariate_value 
	, m.Exposure_variable_name
	, m.Exposure_variable_value 
	, m.outcome_name Outcome_name
	, m.outcome_value Outcome_value
	, count(distinct visit_occurrence_id) EncounterCount
	, count(distinct person_id) PatientCount
	, @version Query_Version
	, @queryExecutionDate Query_Execution_Date
	from (select * from  #age_range
			cross join  (select * from #Exposure_variable where Exposure_variable_name  = 'Glycemic_Control')a
			cross join #outcome
		) m 
	left join #patients p on m.Exposure_variable_id = p.Exposure_variable3_id
		and m.outcome_id = p.Outcome_id
		and m.covariate_id = p.age_id
	group by m.covariate_name, m.covariate_value, m.Exposure_variable_name, m.Exposure_variable_value, m.outcome_name, m.outcome_value 

	order by Exposure_variable_name, covariate_name, covariate_value, Exposure_variable_value, outcome_name, outcome_value 

	
	--- Mask cell counts 
	select Institution, covariate_name, covariate_value, Exposure_variable_name, Exposure_variable_value, Outcome_name, Outcome_value
	, case when @minAllowedCellCount = 0 then try_convert(varchar(20), EncounterCount)
			when @minAllowedCellCount = 11 and EncounterCount between 1 and 10 then '[1-10]' 
			when @minAllowedCellCount = 11 and EncounterCount = 0 or EncounterCount >=11 then  try_convert(varchar(20), EncounterCount)
			end as EncounterCount
	, case when @minAllowedCellCount = 0 then try_convert(varchar(20), PatientCount)
			when @minAllowedCellCount = 11 and PatientCount between 1 and 10 then '[1-10]' 
			when @minAllowedCellCount = 11 and PatientCount = 0 or PatientCount >=11 then  try_convert(varchar(20), PatientCount)			
			end as PatientCount
	, Query_Version
	, Query_Execution_Date
	from #results;
